{"ast":null,"code":"var _jsxFileName = \"E:\\\\to-do\\\\src\\\\pages\\\\project\\\\Project.tsx\",\n  _s = $RefreshSig$();\nimport { useParams } from 'react-router-dom';\nimport { useAppSelector } from '../../hooks/useAppSelector';\nimport { Button, Container, Grid, Typography } from '@mui/material';\nimport AddTaskModal from '../../components/project/AddTaskModal';\nimport { useState } from 'react';\nimport TaskItem from '../../components/project/TaskItem';\nimport { useDrop } from 'react-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Project = () => {\n  _s();\n  var _project$tasks, _project$tasks2, _project$tasks3, _project$tasks4;\n  const {\n    id\n  } = useParams();\n  const state = useAppSelector(state => state.projects);\n  const project = id && state.find(item => item.id === +id);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [{\n    /* canDrop, */isOver\n  }, drop] = useDrop(() => ({\n    // The type (or types) to accept - strings or symbols\n    accept: 'BOX',\n    // Props to collect\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop()\n    })\n  }));\n  return !project ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Project not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: project.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        setModalOpen(true);\n      },\n      children: \"Create task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      gap: 1,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sx: {\n          width: '32%',\n          textAlign: 'center',\n          border: '1px solid black',\n          borderRadius: 2\n        },\n        ref: drop,\n        role: 'Dustbin',\n        style: {\n          backgroundColor: isOver ? 'red' : 'white'\n        },\n        children: [\"Queue\", (_project$tasks = project.tasks) === null || _project$tasks === void 0 ? void 0 : _project$tasks.filter(item => item.status === 'queue').map(item => /*#__PURE__*/_jsxDEV(TaskItem, {\n          item: item\n        }, `${project.id}.${item.number}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sx: {\n          width: '32%',\n          textAlign: 'center',\n          border: '1px solid black',\n          borderRadius: 2\n        }\n        /* ref={drop}\r\n        role={'Dustbin'}\r\n        style={{ backgroundColor: isOver ? 'red' : 'white' }} */,\n        children: [\"Development\", (_project$tasks2 = project.tasks) === null || _project$tasks2 === void 0 ? void 0 : _project$tasks2.filter(item => item.status === 'development').map(item => /*#__PURE__*/_jsxDEV(TaskItem, {\n          item: item\n        }, `${project.id}.${item.number}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sx: {\n          width: '32%',\n          textAlign: 'center',\n          border: '1px solid black',\n          borderRadius: 2\n        }\n        /* ref={drop}\r\n        role={'Dustbin'}\r\n        style={{ backgroundColor: isOver ? 'red' : 'white' }} */,\n        children: [\"Done\", (_project$tasks3 = project.tasks) === null || _project$tasks3 === void 0 ? void 0 : _project$tasks3.filter(item => item.status === 'done').map(item => /*#__PURE__*/_jsxDEV(TaskItem, {\n          item: item\n        }, `${project.id}.${item.number}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTaskModal, {\n      modalOpen: modalOpen,\n      setModalOpen: setModalOpen,\n      taskId: (_project$tasks4 = project.tasks) !== null && _project$tasks4 !== void 0 && _project$tasks4.length ? project.tasks[project.tasks.length - 1].number + 1 : 1,\n      projectId: project.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Project, \"TOjrTQZnzuqHJZNtHP4svMzRWzc=\", false, function () {\n  return [useParams, useAppSelector, useDrop];\n});\n_c = Project;\nexport default Project;\nvar _c;\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["useParams","useAppSelector","Button","Container","Grid","Typography","AddTaskModal","useState","TaskItem","useDrop","jsxDEV","_jsxDEV","Project","_s","_project$tasks","_project$tasks2","_project$tasks3","_project$tasks4","id","state","projects","project","find","item","modalOpen","setModalOpen","isOver","drop","accept","collect","monitor","canDrop","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","name","onClick","container","gap","sx","width","textAlign","border","borderRadius","ref","role","style","backgroundColor","tasks","filter","status","map","number","taskId","length","projectId","_c","$RefreshReg$"],"sources":["E:/to-do/src/pages/project/Project.tsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\r\nimport { useAppSelector } from '../../hooks/useAppSelector';\r\nimport { Button, Container, Grid, Typography } from '@mui/material';\r\nimport AddTaskModal from '../../components/project/AddTaskModal';\r\nimport { useState } from 'react';\r\nimport TaskItem from '../../components/project/TaskItem';\r\nimport { useDrop } from 'react-dnd';\r\n\r\nconst Project = () => {\r\n  const { id } = useParams();\r\n\r\n  const state = useAppSelector((state) => state.projects);\r\n\r\n  const project = id && state.find((item) => item.id === +id);\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  const [{ /* canDrop, */ isOver }, drop] = useDrop(() => ({\r\n    // The type (or types) to accept - strings or symbols\r\n    accept: 'BOX',\r\n    // Props to collect\r\n    collect: (monitor) => ({\r\n      isOver: monitor.isOver(),\r\n      canDrop: monitor.canDrop(),\r\n    }),\r\n  }));\r\n\r\n  return !project ? (\r\n    <div>Project not found</div>\r\n  ) : (\r\n    <Container>\r\n      <Typography variant=\"h4\">{project.name}</Typography>\r\n      <Button\r\n        onClick={() => {\r\n          setModalOpen(true);\r\n        }}\r\n      >\r\n        Create task\r\n      </Button>\r\n      <Grid\r\n        container\r\n        gap={1}\r\n      >\r\n        <Grid\r\n          item\r\n          sx={{\r\n            width: '32%',\r\n            textAlign: 'center',\r\n            border: '1px solid black',\r\n            borderRadius: 2,\r\n          }}\r\n          ref={drop}\r\n          role={'Dustbin'}\r\n          style={{ backgroundColor: isOver ? 'red' : 'white' }}\r\n        >\r\n          Queue\r\n          {project.tasks\r\n            ?.filter((item) => item.status === 'queue')\r\n            .map((item) => (\r\n              <TaskItem\r\n                item={item}\r\n                key={`${project.id}.${item.number}`}\r\n              />\r\n            ))}\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          sx={{ width: '32%', textAlign: 'center', border: '1px solid black', borderRadius: 2 }}\r\n          /* ref={drop}\r\n          role={'Dustbin'}\r\n          style={{ backgroundColor: isOver ? 'red' : 'white' }} */\r\n        >\r\n          Development\r\n          {project.tasks\r\n            ?.filter((item) => item.status === 'development')\r\n            .map((item) => (\r\n              <TaskItem\r\n                item={item}\r\n                key={`${project.id}.${item.number}`}\r\n              />\r\n            ))}\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          sx={{ width: '32%', textAlign: 'center', border: '1px solid black', borderRadius: 2 }}\r\n          /* ref={drop}\r\n          role={'Dustbin'}\r\n          style={{ backgroundColor: isOver ? 'red' : 'white' }} */\r\n        >\r\n          Done\r\n          {project.tasks\r\n            ?.filter((item) => item.status === 'done')\r\n            .map((item) => (\r\n              <TaskItem\r\n                item={item}\r\n                key={`${project.id}.${item.number}`}\r\n              />\r\n            ))}\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <AddTaskModal\r\n        modalOpen={modalOpen}\r\n        setModalOpen={setModalOpen}\r\n        taskId={project.tasks?.length ? project.tasks[project.tasks.length - 1].number + 1 : 1}\r\n        projectId={project.id}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}