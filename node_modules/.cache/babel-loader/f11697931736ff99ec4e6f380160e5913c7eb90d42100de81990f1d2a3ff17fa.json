{"ast":null,"code":"var _jsxFileName = \"E:\\\\to-do\\\\src\\\\pages\\\\project\\\\Project.tsx\",\n  _s = $RefreshSig$();\nimport { useParams } from 'react-router-dom';\nimport { useAppSelector } from '../../hooks/useAppSelector';\nimport { Button, Container, Grid, Typography } from '@mui/material';\nimport AddTaskModal from '../../components/project/AddTaskModal';\nimport { useState } from 'react';\nimport ProjectColumn from '../../components/project/ProjectColumn';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columnNames = ['Queue', 'Development', 'Done'];\nconst Project = () => {\n  _s();\n  var _project$tasks;\n  const {\n    id\n  } = useParams();\n  const state = useAppSelector(state => state.projects);\n  const project = id && state.find(item => item.id === +id);\n  const [modalOpen, setModalOpen] = useState(false);\n  return !project ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Project not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: project.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        setModalOpen(true);\n      },\n      children: \"Create task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      gap: 1,\n      children: columnNames.map(item => /*#__PURE__*/_jsxDEV(ProjectColumn, {\n        project: project,\n        columnName: item\n      }, item, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTaskModal, {\n      modalOpen: modalOpen,\n      setModalOpen: setModalOpen,\n      taskId: (_project$tasks = project.tasks) !== null && _project$tasks !== void 0 && _project$tasks.length ? project.tasks[project.tasks.length - 1].number + 1 : 1,\n      projectId: project.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Project, \"SBaXpWXvQZlEAKUC5uT7KDadyto=\", false, function () {\n  return [useParams, useAppSelector];\n});\n_c = Project;\nexport default Project;\nvar _c;\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["useParams","useAppSelector","Button","Container","Grid","Typography","AddTaskModal","useState","ProjectColumn","jsxDEV","_jsxDEV","columnNames","Project","_s","_project$tasks","id","state","projects","project","find","item","modalOpen","setModalOpen","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","name","onClick","container","gap","map","columnName","taskId","tasks","length","number","projectId","_c","$RefreshReg$"],"sources":["E:/to-do/src/pages/project/Project.tsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\r\nimport { useAppSelector } from '../../hooks/useAppSelector';\r\nimport { Button, Container, Grid, Typography } from '@mui/material';\r\nimport AddTaskModal from '../../components/project/AddTaskModal';\r\nimport { useState } from 'react';\r\nimport TaskItem from '../../components/project/TaskItem';\r\nimport { useDrop } from 'react-dnd';\r\nimport ProjectColumn from '../../components/project/ProjectColumn';\r\n\r\nconst columnNames = ['Queue', 'Development', 'Done'];\r\n\r\nconst Project = () => {\r\n  const { id } = useParams();\r\n\r\n  const state = useAppSelector((state) => state.projects);\r\n\r\n  const project = id && state.find((item) => item.id === +id);\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  return !project ? (\r\n    <div>Project not found</div>\r\n  ) : (\r\n    <Container>\r\n      <Typography variant=\"h4\">{project.name}</Typography>\r\n      <Button\r\n        onClick={() => {\r\n          setModalOpen(true);\r\n        }}\r\n      >\r\n        Create task\r\n      </Button>\r\n      <Grid\r\n        container\r\n        gap={1}\r\n      >\r\n        {columnNames.map((item) => (\r\n          <ProjectColumn\r\n            project={project}\r\n            columnName={item}\r\n            key={item}\r\n          />\r\n        ))}\r\n      </Grid>\r\n\r\n      <AddTaskModal\r\n        modalOpen={modalOpen}\r\n        setModalOpen={setModalOpen}\r\n        taskId={project.tasks?.length ? project.tasks[project.tasks.length - 1].number + 1 : 1}\r\n        projectId={project.id}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,cAAc,QAAQ,4BAA4B;AAC3D,SAASC,MAAM,EAAEC,SAAS,EAAEC,IAAI,EAAEC,UAAU,QAAQ,eAAe;AACnE,OAAOC,YAAY,MAAM,uCAAuC;AAChE,SAASC,QAAQ,QAAQ,OAAO;AAGhC,OAAOC,aAAa,MAAM,wCAAwC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,GAAG,CAAC,OAAO,EAAE,aAAa,EAAE,MAAM,CAAC;AAEpD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,cAAA;EACpB,MAAM;IAAEC;EAAG,CAAC,GAAGf,SAAS,CAAC,CAAC;EAE1B,MAAMgB,KAAK,GAAGf,cAAc,CAAEe,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAAC;EAEvD,MAAMC,OAAO,GAAGH,EAAE,IAAIC,KAAK,CAACG,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACL,EAAE,KAAK,CAACA,EAAE,CAAC;EAE3D,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAEjD,OAAO,CAACW,OAAO,gBACbR,OAAA;IAAAa,QAAA,EAAK;EAAiB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC,gBAE5BjB,OAAA,CAACP,SAAS;IAAAoB,QAAA,gBACRb,OAAA,CAACL,UAAU;MAACuB,OAAO,EAAC,IAAI;MAAAL,QAAA,EAAEL,OAAO,CAACW;IAAI;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,eACpDjB,OAAA,CAACR,MAAM;MACL4B,OAAO,EAAEA,CAAA,KAAM;QACbR,YAAY,CAAC,IAAI,CAAC;MACpB,CAAE;MAAAC,QAAA,EACH;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTjB,OAAA,CAACN,IAAI;MACH2B,SAAS;MACTC,GAAG,EAAE,CAAE;MAAAT,QAAA,EAENZ,WAAW,CAACsB,GAAG,CAAEb,IAAI,iBACpBV,OAAA,CAACF,aAAa;QACZU,OAAO,EAAEA,OAAQ;QACjBgB,UAAU,EAAEd;MAAK,GACZA,IAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAEPjB,OAAA,CAACJ,YAAY;MACXe,SAAS,EAAEA,SAAU;MACrBC,YAAY,EAAEA,YAAa;MAC3Ba,MAAM,EAAE,CAAArB,cAAA,GAAAI,OAAO,CAACkB,KAAK,cAAAtB,cAAA,eAAbA,cAAA,CAAeuB,MAAM,GAAGnB,OAAO,CAACkB,KAAK,CAAClB,OAAO,CAACkB,KAAK,CAACC,MAAM,GAAG,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,GAAG,CAAE;MACvFC,SAAS,EAAErB,OAAO,CAACH;IAAG;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CACZ;AACH,CAAC;AAACd,EAAA,CA1CID,OAAO;EAAA,QACIZ,SAAS,EAEVC,cAAc;AAAA;AAAAuC,EAAA,GAHxB5B,OAAO;AA4Cb,eAAeA,OAAO;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}