{"ast":null,"code":"import { Actions } from '../../types/types';\nconst localStorageData = localStorage.getItem('01MyToDoList23');\nconst initialState = localStorageData ? JSON.parse(localStorageData) : [{\n  name: 'New project',\n  description: 'Test project',\n  id: 1,\n  tasks: []\n}];\nexport function projectsReducer(state = initialState, action) {\n  var _state$find, _state$find$tasks;\n  switch (action.type) {\n    case Actions.AddProject:\n      state.push(action.payload);\n      return state;\n    case Actions.AddTask:\n      (_state$find = state.find(item => item.id === action.payload.project)) === null || _state$find === void 0 ? void 0 : (_state$find$tasks = _state$find.tasks) === null || _state$find$tasks === void 0 ? void 0 : _state$find$tasks.push(action.payload.task);\n      localStorage.setItem('01MyToDoList23', JSON.stringify(state));\n      return state;\n    case Actions.EditTask:\n      console.log(action.payload.task.name);\n      state = state.map(item => {\n        var _item$tasks;\n        return item.id === action.payload.projectId ? {\n          ...item,\n          tasks: (_item$tasks = item.tasks) === null || _item$tasks === void 0 ? void 0 : _item$tasks.map(task => task.number === action.payload.task.number ? action.payload.task : task)\n        } : item;\n      });\n      localStorage.setItem('01MyToDoList23', JSON.stringify(state));\n      return state;\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["Actions","localStorageData","localStorage","getItem","initialState","JSON","parse","name","description","id","tasks","projectsReducer","state","action","_state$find","_state$find$tasks","type","AddProject","push","payload","AddTask","find","item","project","task","setItem","stringify","EditTask","console","log","map","_item$tasks","projectId","number"],"sources":["E:/to-do/src/store/reducers/ProjectsReducer.tsx"],"sourcesContent":["import { Actions, Project, Task } from '../../types/types';\r\n\r\ninterface AddProject {\r\n  type: Actions.AddProject;\r\n  payload: Project;\r\n}\r\n\r\ninterface AddTask {\r\n  type: Actions.AddTask;\r\n  payload: {\r\n    project: number;\r\n    task: Task;\r\n  };\r\n}\r\n\r\ninterface EditTask {\r\n  type: Actions.EditTask;\r\n  payload: {\r\n    projectId: number;\r\n    task: Task;\r\n  };\r\n}\r\n\r\ntype UserAction = AddProject | AddTask | EditTask;\r\n\r\nconst localStorageData = localStorage.getItem('01MyToDoList23');\r\n\r\nconst initialState: Project[] = localStorageData\r\n  ? (JSON.parse(localStorageData) as Project[])\r\n  : [{ name: 'New project', description: 'Test project', id: 1, tasks: [] }];\r\n\r\nexport function projectsReducer(state = initialState, action: UserAction): Project[] {\r\n  switch (action.type) {\r\n    case Actions.AddProject:\r\n      state.push(action.payload);\r\n      return state;\r\n    case Actions.AddTask:\r\n      state.find((item) => item.id === action.payload.project)?.tasks?.push(action.payload.task);\r\n      localStorage.setItem('01MyToDoList23', JSON.stringify(state));\r\n      return state;\r\n    case Actions.EditTask:\r\n      console.log(action.payload.task.name);\r\n\r\n      state = state.map((item) =>\r\n        item.id === action.payload.projectId\r\n          ? {\r\n              ...item,\r\n              tasks: item.tasks?.map((task) =>\r\n                task.number === action.payload.task.number ? action.payload.task : task\r\n              ),\r\n            }\r\n          : item\r\n      );\r\n      localStorage.setItem('01MyToDoList23', JSON.stringify(state));\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAASA,OAAO,QAAuB,mBAAmB;AAyB1D,MAAMC,gBAAgB,GAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;AAE/D,MAAMC,YAAuB,GAAGH,gBAAgB,GAC3CI,IAAI,CAACC,KAAK,CAACL,gBAAgB,CAAC,GAC7B,CAAC;EAAEM,IAAI,EAAE,aAAa;EAAEC,WAAW,EAAE,cAAc;EAAEC,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE;AAAG,CAAC,CAAC;AAE5E,OAAO,SAASC,eAAeA,CAACC,KAAK,GAAGR,YAAY,EAAES,MAAkB,EAAa;EAAA,IAAAC,WAAA,EAAAC,iBAAA;EACnF,QAAQF,MAAM,CAACG,IAAI;IACjB,KAAKhB,OAAO,CAACiB,UAAU;MACrBL,KAAK,CAACM,IAAI,CAACL,MAAM,CAACM,OAAO,CAAC;MAC1B,OAAOP,KAAK;IACd,KAAKZ,OAAO,CAACoB,OAAO;MAClB,CAAAN,WAAA,GAAAF,KAAK,CAACS,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACb,EAAE,KAAKI,MAAM,CAACM,OAAO,CAACI,OAAO,CAAC,cAAAT,WAAA,wBAAAC,iBAAA,GAAxDD,WAAA,CAA0DJ,KAAK,cAAAK,iBAAA,uBAA/DA,iBAAA,CAAiEG,IAAI,CAACL,MAAM,CAACM,OAAO,CAACK,IAAI,CAAC;MAC1FtB,YAAY,CAACuB,OAAO,CAAC,gBAAgB,EAAEpB,IAAI,CAACqB,SAAS,CAACd,KAAK,CAAC,CAAC;MAC7D,OAAOA,KAAK;IACd,KAAKZ,OAAO,CAAC2B,QAAQ;MACnBC,OAAO,CAACC,GAAG,CAAChB,MAAM,CAACM,OAAO,CAACK,IAAI,CAACjB,IAAI,CAAC;MAErCK,KAAK,GAAGA,KAAK,CAACkB,GAAG,CAAER,IAAI;QAAA,IAAAS,WAAA;QAAA,OACrBT,IAAI,CAACb,EAAE,KAAKI,MAAM,CAACM,OAAO,CAACa,SAAS,GAChC;UACE,GAAGV,IAAI;UACPZ,KAAK,GAAAqB,WAAA,GAAET,IAAI,CAACZ,KAAK,cAAAqB,WAAA,uBAAVA,WAAA,CAAYD,GAAG,CAAEN,IAAI,IAC1BA,IAAI,CAACS,MAAM,KAAKpB,MAAM,CAACM,OAAO,CAACK,IAAI,CAACS,MAAM,GAAGpB,MAAM,CAACM,OAAO,CAACK,IAAI,GAAGA,IACrE;QACF,CAAC,GACDF,IAAI;MAAA,CACV,CAAC;MACDpB,YAAY,CAACuB,OAAO,CAAC,gBAAgB,EAAEpB,IAAI,CAACqB,SAAS,CAACd,KAAK,CAAC,CAAC;MAC7D,OAAOA,KAAK;IACd;MACE,OAAOA,KAAK;EAChB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}