{"ast":null,"code":"import _slicedToArray from\"E:/to-do/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useParams}from'react-router-dom';import{useAppSelector}from'../../hooks/useAppSelector';import{Button,Container,Grid,Typography}from'@mui/material';import AddTaskModal from'../../components/project/AddTaskModal';import{useState}from'react';import ProjectColumn from'../../components/project/ProjectColumn';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var columnNames=['Queue','Development','Done'];var Project=function Project(){var _project$tasks;var _useParams=useParams(),id=_useParams.id;var state=useAppSelector(function(state){return state.projects;});var project=id&&state.find(function(item){return item.id===+id;});var _useState=useState(false),_useState2=_slicedToArray(_useState,2),modalOpen=_useState2[0],setModalOpen=_useState2[1];return!project?/*#__PURE__*/_jsx(\"div\",{children:\"Project not found\"}):/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",children:project.name}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){setModalOpen(true);},children:\"Create task\"}),/*#__PURE__*/_jsx(Grid,{container:true,gap:1,children:columnNames.map(function(item){return/*#__PURE__*/_jsx(ProjectColumn,{project:project,columnName:item},item);})}),/*#__PURE__*/_jsx(AddTaskModal,{modalOpen:modalOpen,setModalOpen:setModalOpen,taskId:(_project$tasks=project.tasks)!==null&&_project$tasks!==void 0&&_project$tasks.length?project.tasks[project.tasks.length-1].number+1:1,projectId:project.id})]});};export default Project;","map":{"version":3,"names":["useParams","useAppSelector","Button","Container","Grid","Typography","AddTaskModal","useState","ProjectColumn","jsx","_jsx","jsxs","_jsxs","columnNames","Project","_project$tasks","_useParams","id","state","projects","project","find","item","_useState","_useState2","_slicedToArray","modalOpen","setModalOpen","children","variant","name","onClick","container","gap","map","columnName","taskId","tasks","length","number","projectId"],"sources":["E:/to-do/src/pages/project/Project.tsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\r\nimport { useAppSelector } from '../../hooks/useAppSelector';\r\nimport { Button, Container, Grid, Typography } from '@mui/material';\r\nimport AddTaskModal from '../../components/project/AddTaskModal';\r\nimport { useState } from 'react';\r\nimport ProjectColumn from '../../components/project/ProjectColumn';\r\nimport { Status } from '../../types/types';\r\n\r\nconst columnNames = ['Queue', 'Development', 'Done'] as Status[];\r\n\r\nconst Project = () => {\r\n  const { id } = useParams();\r\n\r\n  const state = useAppSelector((state) => state.projects);\r\n\r\n  const project = id && state.find((item) => item.id === +id);\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  return !project ? (\r\n    <div>Project not found</div>\r\n  ) : (\r\n    <Container>\r\n      <Typography variant=\"h4\">{project.name}</Typography>\r\n      <Button\r\n        onClick={() => {\r\n          setModalOpen(true);\r\n        }}\r\n      >\r\n        Create task\r\n      </Button>\r\n      <Grid\r\n        container\r\n        gap={1}\r\n      >\r\n        {columnNames.map((item) => (\r\n          <ProjectColumn\r\n            project={project}\r\n            columnName={item}\r\n            key={item}\r\n          />\r\n        ))}\r\n      </Grid>\r\n\r\n      <AddTaskModal\r\n        modalOpen={modalOpen}\r\n        setModalOpen={setModalOpen}\r\n        taskId={project.tasks?.length ? project.tasks[project.tasks.length - 1].number + 1 : 1}\r\n        projectId={project.id}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n"],"mappings":"8FAAA,OAASA,SAAS,KAAQ,kBAAkB,CAC5C,OAASC,cAAc,KAAQ,4BAA4B,CAC3D,OAASC,MAAM,CAAEC,SAAS,CAAEC,IAAI,CAAEC,UAAU,KAAQ,eAAe,CACnE,MAAO,CAAAC,YAAY,KAAM,uCAAuC,CAChE,OAASC,QAAQ,KAAQ,OAAO,CAChC,MAAO,CAAAC,aAAa,KAAM,wCAAwC,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAGnE,GAAM,CAAAC,WAAW,CAAG,CAAC,OAAO,CAAE,aAAa,CAAE,MAAM,CAAa,CAEhE,GAAM,CAAAC,OAAO,CAAG,QAAV,CAAAA,OAAOA,CAAA,CAAS,KAAAC,cAAA,CACpB,IAAAC,UAAA,CAAehB,SAAS,CAAC,CAAC,CAAlBiB,EAAE,CAAAD,UAAA,CAAFC,EAAE,CAEV,GAAM,CAAAC,KAAK,CAAGjB,cAAc,CAAC,SAACiB,KAAK,QAAK,CAAAA,KAAK,CAACC,QAAQ,GAAC,CAEvD,GAAM,CAAAC,OAAO,CAAGH,EAAE,EAAIC,KAAK,CAACG,IAAI,CAAC,SAACC,IAAI,QAAK,CAAAA,IAAI,CAACL,EAAE,GAAK,CAACA,EAAE,GAAC,CAE3D,IAAAM,SAAA,CAAkChB,QAAQ,CAAC,KAAK,CAAC,CAAAiB,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA1CG,SAAS,CAAAF,UAAA,IAAEG,YAAY,CAAAH,UAAA,IAE9B,MAAO,CAACJ,OAAO,cACbV,IAAA,QAAAkB,QAAA,CAAK,mBAAiB,CAAK,CAAC,cAE5BhB,KAAA,CAACT,SAAS,EAAAyB,QAAA,eACRlB,IAAA,CAACL,UAAU,EAACwB,OAAO,CAAC,IAAI,CAAAD,QAAA,CAAER,OAAO,CAACU,IAAI,CAAa,CAAC,cACpDpB,IAAA,CAACR,MAAM,EACL6B,OAAO,CAAE,SAAAA,QAAA,CAAM,CACbJ,YAAY,CAAC,IAAI,CAAC,CACpB,CAAE,CAAAC,QAAA,CACH,aAED,CAAQ,CAAC,cACTlB,IAAA,CAACN,IAAI,EACH4B,SAAS,MACTC,GAAG,CAAE,CAAE,CAAAL,QAAA,CAENf,WAAW,CAACqB,GAAG,CAAC,SAACZ,IAAI,qBACpBZ,IAAA,CAACF,aAAa,EACZY,OAAO,CAAEA,OAAQ,CACjBe,UAAU,CAAEb,IAAK,EACZA,IACN,CAAC,EACH,CAAC,CACE,CAAC,cAEPZ,IAAA,CAACJ,YAAY,EACXoB,SAAS,CAAEA,SAAU,CACrBC,YAAY,CAAEA,YAAa,CAC3BS,MAAM,CAAE,CAAArB,cAAA,CAAAK,OAAO,CAACiB,KAAK,UAAAtB,cAAA,WAAbA,cAAA,CAAeuB,MAAM,CAAGlB,OAAO,CAACiB,KAAK,CAACjB,OAAO,CAACiB,KAAK,CAACC,MAAM,CAAG,CAAC,CAAC,CAACC,MAAM,CAAG,CAAC,CAAG,CAAE,CACvFC,SAAS,CAAEpB,OAAO,CAACH,EAAG,CACvB,CAAC,EACO,CACZ,CACH,CAAC,CAED,cAAe,CAAAH,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}