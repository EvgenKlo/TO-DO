{"ast":null,"code":"var _jsxFileName = \"E:\\\\to-do\\\\src\\\\components\\\\project\\\\TaskItem.tsx\",\n  _s = $RefreshSig$();\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport { CardActionArea } from '@mui/material';\nimport { useDrag } from 'react-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskItem = ({\n  item\n}) => {\n  _s();\n  const [modalOpen, setModalOpen] = useState(false);\n  const [{\n    isDragging\n  }, drag, dragPreview] = useDrag(() => ({\n    type: 'BOX',\n    item: item,\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  }));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        margin: 1,\n        backgroundColor: item.priority\n      },\n      ref: dragPreview,\n      style: {\n        opacity: isDragging ? 0.5 : 1\n      },\n      children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n        ref: drag,\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h5\",\n            component: \"div\",\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(TaskItem, \"vYzsZ7/WDC9GX07d+IFlG83uakk=\", false, function () {\n  return [useDrag];\n});\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["Card","CardContent","Typography","CardActionArea","useDrag","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskItem","item","_s","modalOpen","setModalOpen","useState","isDragging","drag","dragPreview","type","collect","monitor","children","sx","margin","backgroundColor","priority","ref","style","opacity","gutterBottom","variant","component","name","fileName","_jsxFileName","lineNumber","columnNumber","color","description","_c","$RefreshReg$"],"sources":["E:/to-do/src/components/project/TaskItem.tsx"],"sourcesContent":["import { Task } from '../../types/types';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport { CardActionArea } from '@mui/material';\r\n\r\nimport { useDrag } from 'react-dnd';\r\nimport { useAppSelector } from '../../hooks/useAppSelector';\r\n\r\nconst TaskItem: React.FC<{ item: Task }> = ({ item }) => {\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  const [{ isDragging }, drag, dragPreview] = useDrag(() => ({\r\n    type: 'BOX',\r\n    item: item,\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  }));\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        sx={{ margin: 1, backgroundColor: item.priority }}\r\n        ref={dragPreview}\r\n        style={{ opacity: isDragging ? 0.5 : 1 }}\r\n      >\r\n        <CardActionArea ref={drag}>\r\n          <CardContent>\r\n            <Typography\r\n              gutterBottom\r\n              variant=\"h5\"\r\n              component=\"div\"\r\n            >\r\n              {item.name}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"body2\"\r\n              color=\"text.secondary\"\r\n            >\r\n              {item.description}\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskItem;\r\n"],"mappings":";;AACA,OAAOA,IAAI,MAAM,oBAAoB;AACrC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,cAAc,QAAQ,eAAe;AAE9C,SAASC,OAAO,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGpC,MAAMC,QAAkC,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACvD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGC,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAM,CAAC;IAAEC;EAAW,CAAC,EAAEC,IAAI,EAAEC,WAAW,CAAC,GAAGb,OAAO,CAAC,OAAO;IACzDc,IAAI,EAAE,KAAK;IACXR,IAAI,EAAEA,IAAI;IACVS,OAAO,EAAGC,OAAO,KAAM;MACrBL,UAAU,EAAEK,OAAO,CAACL,UAAU,CAAC;IACjC,CAAC;EACH,CAAC,CAAC,CAAC;EAEH,oBACET,OAAA,CAAAE,SAAA;IAAAa,QAAA,eACEf,OAAA,CAACN,IAAI;MACHsB,EAAE,EAAE;QAAEC,MAAM,EAAE,CAAC;QAAEC,eAAe,EAAEd,IAAI,CAACe;MAAS,CAAE;MAClDC,GAAG,EAAET,WAAY;MACjBU,KAAK,EAAE;QAAEC,OAAO,EAAEb,UAAU,GAAG,GAAG,GAAG;MAAE,CAAE;MAAAM,QAAA,eAEzCf,OAAA,CAACH,cAAc;QAACuB,GAAG,EAAEV,IAAK;QAAAK,QAAA,eACxBf,OAAA,CAACL,WAAW;UAAAoB,QAAA,gBACVf,OAAA,CAACJ,UAAU;YACT2B,YAAY;YACZC,OAAO,EAAC,IAAI;YACZC,SAAS,EAAC,KAAK;YAAAV,QAAA,EAEdX,IAAI,CAACsB;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACb9B,OAAA,CAACJ,UAAU;YACT4B,OAAO,EAAC,OAAO;YACfO,KAAK,EAAC,gBAAgB;YAAAhB,QAAA,EAErBX,IAAI,CAAC4B;UAAW;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb;EAAC,gBACP,CAAC;AAEP,CAAC;AAACzB,EAAA,CAtCIF,QAAkC;EAAA,QAGML,OAAO;AAAA;AAAAmC,EAAA,GAH/C9B,QAAkC;AAwCxC,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}