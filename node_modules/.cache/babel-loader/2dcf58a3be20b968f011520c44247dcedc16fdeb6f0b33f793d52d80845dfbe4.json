{"ast":null,"code":"var _jsxFileName = \"E:\\\\to-do\\\\src\\\\pages\\\\project\\\\Project.tsx\",\n  _s = $RefreshSig$();\nimport { useParams } from 'react-router-dom';\nimport { useAppSelector } from '../../hooks/useAppSelector';\nimport { Button, Grid } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Project = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const state = useAppSelector(state => state.projects);\n  const project = id && state.find(item => item.id === +id);\n  return !project ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Project not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      children: \"Create task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      width: '100%',\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sx: {\n          borderRadius: 3,\n          width: '33%',\n          textAlign: 'center'\n        },\n        children: \"Queue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sx: {\n          borderRadius: 3,\n          width: '33%',\n          textAlign: 'center'\n        },\n        children: \"Development\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sx: {\n          borderRadius: 3,\n          width: '33%',\n          textAlign: 'center'\n        },\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: project.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Project, \"h5tKpIZ0gjd+4C4IPOHI1y5EUkY=\", false, function () {\n  return [useParams, useAppSelector];\n});\n_c = Project;\nexport default Project;\nvar _c;\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["useParams","useAppSelector","Button","Grid","jsxDEV","_jsxDEV","Fragment","_Fragment","Project","_s","id","state","projects","project","find","item","children","fileName","_jsxFileName","lineNumber","columnNumber","container","width","sx","borderRadius","textAlign","name","_c","$RefreshReg$"],"sources":["E:/to-do/src/pages/project/Project.tsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\r\nimport { useAppSelector } from '../../hooks/useAppSelector';\r\nimport { Button, Grid } from '@mui/material';\r\n\r\nconst Project = () => {\r\n  const { id } = useParams();\r\n\r\n  const state = useAppSelector((state) => state.projects);\r\n\r\n  const project = id && state.find((item) => item.id === +id);\r\n\r\n  return !project ? (\r\n    <div>Project not found</div>\r\n  ) : (\r\n    <>\r\n      <Button>Create task</Button>\r\n      <Grid\r\n        container\r\n        width={'100%'}\r\n      >\r\n        <Grid\r\n          item\r\n          sx={{ borderRadius: 3, width: '33%', textAlign: 'center' }}\r\n        >\r\n          Queue\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          sx={{ borderRadius: 3, width: '33%', textAlign: 'center' }}\r\n        >\r\n          Development\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          sx={{ borderRadius: 3, width: '33%', textAlign: 'center' }}\r\n        >\r\n          Done\r\n        </Grid>\r\n      </Grid>\r\n      <div>{project.name}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,cAAc,QAAQ,4BAA4B;AAC3D,SAASC,MAAM,EAAEC,IAAI,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAG,CAAC,GAAGV,SAAS,CAAC,CAAC;EAE1B,MAAMW,KAAK,GAAGV,cAAc,CAAEU,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAAC;EAEvD,MAAMC,OAAO,GAAGH,EAAE,IAAIC,KAAK,CAACG,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACL,EAAE,KAAK,CAACA,EAAE,CAAC;EAE3D,OAAO,CAACG,OAAO,gBACbR,OAAA;IAAAW,QAAA,EAAK;EAAiB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC,gBAE5Bf,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACEX,OAAA,CAACH,MAAM;MAAAc,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5Bf,OAAA,CAACF,IAAI;MACHkB,SAAS;MACTC,KAAK,EAAE,MAAO;MAAAN,QAAA,gBAEdX,OAAA,CAACF,IAAI;QACHY,IAAI;QACJQ,EAAE,EAAE;UAAEC,YAAY,EAAE,CAAC;UAAEF,KAAK,EAAE,KAAK;UAAEG,SAAS,EAAE;QAAS,CAAE;QAAAT,QAAA,EAC5D;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACPf,OAAA,CAACF,IAAI;QACHY,IAAI;QACJQ,EAAE,EAAE;UAAEC,YAAY,EAAE,CAAC;UAAEF,KAAK,EAAE,KAAK;UAAEG,SAAS,EAAE;QAAS,CAAE;QAAAT,QAAA,EAC5D;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACPf,OAAA,CAACF,IAAI;QACHY,IAAI;QACJQ,EAAE,EAAE;UAAEC,YAAY,EAAE,CAAC;UAAEF,KAAK,EAAE,KAAK;UAAEG,SAAS,EAAE;QAAS,CAAE;QAAAT,QAAA,EAC5D;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACPf,OAAA;MAAAW,QAAA,EAAMH,OAAO,CAACa;IAAI;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA,eACzB,CACH;AACH,CAAC;AAACX,EAAA,CAtCID,OAAO;EAAA,QACIR,SAAS,EAEVC,cAAc;AAAA;AAAA0B,EAAA,GAHxBnB,OAAO;AAwCb,eAAeA,OAAO;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}