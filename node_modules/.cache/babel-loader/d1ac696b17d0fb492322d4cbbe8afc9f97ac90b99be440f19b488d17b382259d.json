{"ast":null,"code":"var _jsxFileName = \"E:\\\\to-do\\\\src\\\\pages\\\\project\\\\Project.tsx\",\n  _s = $RefreshSig$();\nimport { useParams } from 'react-router-dom';\nimport { useAppSelector } from '../../hooks/useAppSelector';\nimport { Button, Grid } from '@mui/material';\nimport AddTaskModal from '../../components/project/AddTaskModal';\nimport { useState } from 'react';\nimport TaskItem from '../../components/project/Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Project = () => {\n  _s();\n  var _project$tasks;\n  const {\n    id\n  } = useParams();\n  const state = useAppSelector(state => state.projects);\n  const project = id && state.find(item => item.id === +id);\n  const [modalOpen, setModalOpen] = useState(false);\n  return !project ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Project not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        setModalOpen(true);\n      },\n      children: \"Create task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      width: '100%',\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sx: {\n          borderRadius: 3,\n          width: '33%',\n          textAlign: 'center'\n        },\n        children: [\"Queue\", (_project$tasks = project.tasks) === null || _project$tasks === void 0 ? void 0 : _project$tasks.map((item, index) => /*#__PURE__*/_jsxDEV(TaskItem, {\n          item: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sx: {\n          borderRadius: 3,\n          width: '33%',\n          textAlign: 'center'\n        },\n        children: \"Development\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sx: {\n          borderRadius: 3,\n          width: '33%',\n          textAlign: 'center'\n        },\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: project.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTaskModal, {\n      modalOpen: modalOpen,\n      setModalOpen: setModalOpen,\n      taskId: project.tasks ? project.tasks[project.tasks.length - 1].number + 1 : 1,\n      projectId: project.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Project, \"SBaXpWXvQZlEAKUC5uT7KDadyto=\", false, function () {\n  return [useParams, useAppSelector];\n});\n_c = Project;\nexport default Project;\nvar _c;\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["useParams","useAppSelector","Button","Grid","AddTaskModal","useState","TaskItem","jsxDEV","_jsxDEV","Fragment","_Fragment","Project","_s","_project$tasks","id","state","projects","project","find","item","modalOpen","setModalOpen","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","container","width","sx","borderRadius","textAlign","tasks","map","index","name","taskId","length","number","projectId","_c","$RefreshReg$"],"sources":["E:/to-do/src/pages/project/Project.tsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\r\nimport { useAppSelector } from '../../hooks/useAppSelector';\r\nimport { Button, Grid } from '@mui/material';\r\nimport AddTaskModal from '../../components/project/AddTaskModal';\r\nimport { useState } from 'react';\r\nimport TaskItem from '../../components/project/Task';\r\n\r\nconst Project = () => {\r\n  const { id } = useParams();\r\n\r\n  const state = useAppSelector((state) => state.projects);\r\n\r\n  const project = id && state.find((item) => item.id === +id);\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  return !project ? (\r\n    <div>Project not found</div>\r\n  ) : (\r\n    <>\r\n      <Button\r\n        onClick={() => {\r\n          setModalOpen(true);\r\n        }}\r\n      >\r\n        Create task\r\n      </Button>\r\n      <Grid\r\n        container\r\n        width={'100%'}\r\n      >\r\n        <Grid\r\n          item\r\n          sx={{ borderRadius: 3, width: '33%', textAlign: 'center' }}\r\n        >\r\n          Queue\r\n          {project.tasks?.map((item, index) => (\r\n            <TaskItem\r\n              item={item}\r\n              key={index}\r\n            ></TaskItem>\r\n          ))}\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          sx={{ borderRadius: 3, width: '33%', textAlign: 'center' }}\r\n        >\r\n          Development\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          sx={{ borderRadius: 3, width: '33%', textAlign: 'center' }}\r\n        >\r\n          Done\r\n        </Grid>\r\n      </Grid>\r\n      <div>{project.name}</div>\r\n      <AddTaskModal\r\n        modalOpen={modalOpen}\r\n        setModalOpen={setModalOpen}\r\n        taskId={project.tasks ? project.tasks[project.tasks.length - 1].number + 1 : 1}\r\n        projectId={project.id}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}