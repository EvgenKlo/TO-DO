{"ast":null,"code":"var _jsxFileName = \"E:\\\\to-do\\\\src\\\\components\\\\project\\\\ProjectColumn.tsx\",\n  _s = $RefreshSig$();\nimport { Grid } from '@mui/material';\nimport TaskItem from './TaskItem';\nimport { useDrop } from 'react-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectColumn = ({\n  project,\n  columnName\n}) => {\n  _s();\n  var _project$tasks;\n  const [{\n    /* canDrop, */isOver,\n    item\n  }, drop] = useDrop(() => ({\n    accept: 'BOX',\n    drop: () => {\n      console.log(columnName, item);\n    },\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      // canDrop: monitor.canDrop(),\n      item: monitor.didDrop()\n    })\n  }));\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    sx: {\n      width: '32%',\n      textAlign: 'center',\n      border: '1px solid black',\n      borderRadius: 2\n    },\n    ref: drop,\n    role: 'Dustbin',\n    style: {\n      backgroundColor: isOver ? 'red' : 'white'\n    },\n    children: [columnName, (_project$tasks = project.tasks) === null || _project$tasks === void 0 ? void 0 : _project$tasks.filter(item => item.status === columnName.toLocaleLowerCase()).map(item => /*#__PURE__*/_jsxDEV(TaskItem, {\n      item: item\n    }, `${project.id}.${item.number}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectColumn, \"0+QHy4UyEj3IjtvUUtZMy28eoiU=\", false, function () {\n  return [useDrop];\n});\n_c = ProjectColumn;\nexport default ProjectColumn;\nvar _c;\n$RefreshReg$(_c, \"ProjectColumn\");","map":{"version":3,"names":["Grid","TaskItem","useDrop","jsxDEV","_jsxDEV","ProjectColumn","project","columnName","_s","_project$tasks","isOver","item","drop","accept","console","log","collect","monitor","didDrop","sx","width","textAlign","border","borderRadius","ref","role","style","backgroundColor","children","tasks","filter","status","toLocaleLowerCase","map","id","number","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/to-do/src/components/project/ProjectColumn.tsx"],"sourcesContent":["import { Grid } from '@mui/material';\r\nimport TaskItem from './TaskItem';\r\nimport { useDrop } from 'react-dnd';\r\nimport { Project } from '../../types/types';\r\n\r\nconst ProjectColumn: React.FC<{ project: Project; columnName: string }> = ({\r\n  project,\r\n  columnName,\r\n}) => {\r\n  const [{ /* canDrop, */ isOver, item }, drop] = useDrop(() => ({\r\n    accept: 'BOX',\r\n    drop: () => {\r\n      console.log(columnName, item);\r\n    },\r\n\r\n    collect: (monitor) => ({\r\n      isOver: monitor.isOver(),\r\n      // canDrop: monitor.canDrop(),\r\n      item: monitor.didDrop(),\r\n    }),\r\n  }));\r\n\r\n  return (\r\n    <Grid\r\n      item\r\n      sx={{\r\n        width: '32%',\r\n        textAlign: 'center',\r\n        border: '1px solid black',\r\n        borderRadius: 2,\r\n      }}\r\n      ref={drop}\r\n      role={'Dustbin'}\r\n      style={{ backgroundColor: isOver ? 'red' : 'white' }}\r\n    >\r\n      {columnName}\r\n      {project.tasks\r\n        ?.filter((item) => item.status === columnName.toLocaleLowerCase())\r\n        .map((item) => (\r\n          <TaskItem\r\n            item={item}\r\n            key={`${project.id}.${item.number}`}\r\n          />\r\n        ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProjectColumn;\r\n"],"mappings":";;AAAA,SAASA,IAAI,QAAQ,eAAe;AACpC,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,OAAO,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpC,MAAMC,aAAiE,GAAGA,CAAC;EACzEC,OAAO;EACPC;AACF,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,cAAA;EACJ,MAAM,CAAC;IAAE,cAAeC,MAAM;IAAEC;EAAK,CAAC,EAAEC,IAAI,CAAC,GAAGV,OAAO,CAAC,OAAO;IAC7DW,MAAM,EAAE,KAAK;IACbD,IAAI,EAAEA,CAAA,KAAM;MACVE,OAAO,CAACC,GAAG,CAACR,UAAU,EAAEI,IAAI,CAAC;IAC/B,CAAC;IAEDK,OAAO,EAAGC,OAAO,KAAM;MACrBP,MAAM,EAAEO,OAAO,CAACP,MAAM,CAAC,CAAC;MACxB;MACAC,IAAI,EAAEM,OAAO,CAACC,OAAO,CAAC;IACxB,CAAC;EACH,CAAC,CAAC,CAAC;EAEH,oBACEd,OAAA,CAACJ,IAAI;IACHW,IAAI;IACJQ,EAAE,EAAE;MACFC,KAAK,EAAE,KAAK;MACZC,SAAS,EAAE,QAAQ;MACnBC,MAAM,EAAE,iBAAiB;MACzBC,YAAY,EAAE;IAChB,CAAE;IACFC,GAAG,EAAEZ,IAAK;IACVa,IAAI,EAAE,SAAU;IAChBC,KAAK,EAAE;MAAEC,eAAe,EAAEjB,MAAM,GAAG,KAAK,GAAG;IAAQ,CAAE;IAAAkB,QAAA,GAEpDrB,UAAU,GAAAE,cAAA,GACVH,OAAO,CAACuB,KAAK,cAAApB,cAAA,uBAAbA,cAAA,CACGqB,MAAM,CAAEnB,IAAI,IAAKA,IAAI,CAACoB,MAAM,KAAKxB,UAAU,CAACyB,iBAAiB,CAAC,CAAC,CAAC,CACjEC,GAAG,CAAEtB,IAAI,iBACRP,OAAA,CAACH,QAAQ;MACPU,IAAI,EAAEA;IAAK,GACL,GAAEL,OAAO,CAAC4B,EAAG,IAAGvB,IAAI,CAACwB,MAAO,EAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEX,CAAC;AAAC/B,EAAA,CAzCIH,aAAiE;EAAA,QAIrBH,OAAO;AAAA;AAAAsC,EAAA,GAJnDnC,aAAiE;AA2CvE,eAAeA,aAAa;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}